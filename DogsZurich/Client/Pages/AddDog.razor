@page "/Dogs/add"
@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks
@using DogsZurich.Shared
@using Microsoft.Extensions.Logging
@inject ILogger<Dog> Logger
@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject IJSRuntime JS

<h2>Neuer Hund</h2>

@if (dog == null || breedtypes == null){
    <p>loading...</p>
}else{
<EditForm Model="@dog" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
  <table>
    <thead>
        <tr>
            <th colspan="4">Neuen Hund hinzufügen</th>
        </tr>
    </thead>
        <tbody>
                            <tr>
                    <td> Dog Name: </td>
                    <td> <input @bind="dog.Name" /> </td>
                </tr>
            <tr>
                <td>Rassen Typ:</td>
                <td>
    <InputSelect @bind-Value="dog.BreedtypeId" >
        <option value="0">bitte wählen</option>
                            @foreach (Breedtype breedtype in breedtypes)
                            {
                <option value="@breedtype.Id">@breedtype.Description</option>
                            }
    </InputSelect>
                </td>
            </tr>
            <tr>
                <td>Rassen Status:</td>
                <td>
                    <InputSelect @bind-Value="dog.BreedstatusId">
                        <option value="0">bitte wählen</option>
                        @foreach (Breedstatus breedstat in breedstatus)
                        {
                            <option value="@breedstat.Id">@breedstat.Description</option>
                        }
                    </InputSelect>
                </td>
            </tr>
            <tr>
                <td>Rasse 1:</td>
                <td>
                    <InputSelect @bind-Value="dog.Breed1Id">
                        <option value="0">bitte wählen</option>
                        @foreach (Breed breed1 in breed1)
                        {
                            <option value="@breed1.Id">@breed1.Description</option>
                        }
                    </InputSelect>
                </td>
            </tr>
            <tr>
                <td>Rasse 2:</td>
                <td>
                    <InputSelect @bind-Value="dog.Breed2Id">
                        <option value="0">bitte wählen</option>
                        @foreach (Breed breed2 in breed2)
                        {
                            <option value="@breed2.Id">@breed2.Description</option>
                        }
                    </InputSelect>
                </td>
            </tr>
                        <tr>
                <td>Geschlecht:</td>
                <td>
                    <InputSelect @bind-Value="dog.SexId">
                        <option value="0">bitte wählen</option>
                        @foreach (Sex sex in sex)
                        {
                            <option value="@sex.Id">@sex.Description</option>
                        }
                    </InputSelect>
                </td>
            </tr>
            <tr>
                <td>Fellfarbe:</td>
                <td>
                    <InputSelect @bind-Value="dog.ColorsId">
                        <option value="0">bitte wählen</option>
                        @foreach (Color color in color)
                        {
                            <option value="@color.Id">@color.Description</option>
                        }
                    </InputSelect>
                </td>
            </tr>
            <tr>
                <td>Besitzer ID:</td>
                <td>
                    <InputSelect @bind-Value="dog.DogownerId">
                        <option value="0">bitte wählen</option>
                        @foreach (Dogowner owner in owner)
                        {
                            <option value="@owner.Id">@owner.Id</option>
                        }
                    </InputSelect>
                </td>
            </tr>
            <tr>
                <td></td>
                <td>
                    <button type="submit" class="btnbtn-primary">
                        Submit
                    </button>
                </td>
            </tr>

        </tbody>
        </table>

    <DataAnnotationsValidator />
    <ValidationSummary />
</EditForm>}
@code
{
    private Dog dog = new Dog();
    private List<Breedtype> breedtypes;
    private List<Breedstatus> breedstatus;
    private List<Breed> breed1;
    private List<Breed> breed2;
    private List<Sex> sex;
    private List<Color> color;
    private List<Dogowner> owner;

    private int BreedtypeID = 0;
    private int BreedStatID = 0;
    private int Breed1ID = 0;
    private int Breed2ID = 0;
    private int SexID = 0;
    private int ColorID = 0;
    private int OwnerID = 0;

    private const string ServiceEndpoint = "/api";


    protected override async Task OnInitializedAsync() => await GetServerData();

    private async Task GetServerData()
    {
        breedtypes = await Http.GetFromJsonAsync<List<Breedtype>>($"{ServiceEndpoint}/breedtypes");
        breedstatus = await Http.GetFromJsonAsync<List<Breedstatus>>($"{ServiceEndpoint}/breedstatus");
        breed1 = await Http.GetFromJsonAsync<List<Breed>>($"{ServiceEndpoint}/breeds");
        breed2 = await Http.GetFromJsonAsync<List<Breed>>($"{ServiceEndpoint}/breeds");
        sex = await Http.GetFromJsonAsync<List<Sex>>($"{ServiceEndpoint}/sexes");
        color = await Http.GetFromJsonAsync<List<Color>>($"{ServiceEndpoint}/colors");
        owner = await Http.GetFromJsonAsync<List<Dogowner>>($"{ServiceEndpoint}/dogowners");
    }
    private void HandleValidSubmit()
    {
        Logger.LogInformation("HandleValidSubmit called");
        CreateNewDog();
        NavigationManager.NavigateTo("/");
    }
    private async void CreateNewDog()
    {
        dog.Breedtype = breedtypes.FirstOrDefault(bt => bt.Id == BreedtypeID);
        dog.Breedstatus = breedstatus.FirstOrDefault(bs => bs.Id == BreedStatID);
        dog.Breed1 = breed1.FirstOrDefault(bt => bt.Id == Breed1ID);
        dog.Breed2 = breed2.FirstOrDefault(bt => bt.Id == Breed2ID);
        dog.Sex = sex.FirstOrDefault(bt => bt.Id == SexID);
        dog.Colors = color.FirstOrDefault(bt => bt.Id == ColorID);
        dog.Dogowner = owner.FirstOrDefault(bt => bt.Id == OwnerID);

        var response = await Http.PostAsJsonAsync($"{ServiceEndpoint}/dogs", dog);
    }
}