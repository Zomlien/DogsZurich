// <auto-generated />
using System;
using DogsZurich.Server;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DogsZurich.Server.Migrations
{
    [DbContext(typeof(DogContext))]
    partial class DogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DogsZurich.Shared.Ageclass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ageclass");
                });

            modelBuilder.Entity("DogsZurich.Shared.Breed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Breed");
                });

            modelBuilder.Entity("DogsZurich.Shared.Breedstatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Breedstatus");
                });

            modelBuilder.Entity("DogsZurich.Shared.Breedtype", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Breedtype");
                });

            modelBuilder.Entity("DogsZurich.Shared.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Color");
                });

            modelBuilder.Entity("DogsZurich.Shared.Dog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Breed1Id")
                        .HasColumnType("int");

                    b.Property<int?>("Breed2Id")
                        .HasColumnType("int");

                    b.Property<int>("BreedstatusId")
                        .HasColumnType("int");

                    b.Property<int>("BreedtypeId")
                        .HasColumnType("int");

                    b.Property<int>("ColorsId")
                        .HasColumnType("int");

                    b.Property<int>("DogownerId")
                        .HasColumnType("int");

                    b.Property<int>("SexId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Breed1Id");

                    b.HasIndex("Breed2Id");

                    b.HasIndex("BreedstatusId");

                    b.HasIndex("BreedtypeId");

                    b.HasIndex("ColorsId");

                    b.HasIndex("DogownerId");

                    b.HasIndex("SexId");

                    b.ToTable("Dogs");
                });

            modelBuilder.Entity("DogsZurich.Shared.Dogowner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgeclassId")
                        .HasColumnType("int");

                    b.Property<int>("KreisId")
                        .HasColumnType("int");

                    b.Property<int>("QuartierId")
                        .HasColumnType("int");

                    b.Property<int>("SexId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgeclassId");

                    b.HasIndex("KreisId");

                    b.HasIndex("QuartierId");

                    b.HasIndex("SexId");

                    b.ToTable("Dogowner");
                });

            modelBuilder.Entity("DogsZurich.Shared.Kreis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kreis");
                });

            modelBuilder.Entity("DogsZurich.Shared.Quartier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Quartier");
                });

            modelBuilder.Entity("DogsZurich.Shared.Sex", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sex");
                });

            modelBuilder.Entity("DogsZurich.Shared.Dog", b =>
                {
                    b.HasOne("DogsZurich.Shared.Breed", "Breed1")
                        .WithMany()
                        .HasForeignKey("Breed1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DogsZurich.Shared.Breed", "Breed2")
                        .WithMany()
                        .HasForeignKey("Breed2Id");

                    b.HasOne("DogsZurich.Shared.Breedstatus", "Breedstatus")
                        .WithMany()
                        .HasForeignKey("BreedstatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DogsZurich.Shared.Breedtype", "Breedtype")
                        .WithMany()
                        .HasForeignKey("BreedtypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DogsZurich.Shared.Color", "Colors")
                        .WithMany()
                        .HasForeignKey("ColorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DogsZurich.Shared.Dogowner", "Dogowner")
                        .WithMany()
                        .HasForeignKey("DogownerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DogsZurich.Shared.Sex", "Sex")
                        .WithMany()
                        .HasForeignKey("SexId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Breed1");

                    b.Navigation("Breed2");

                    b.Navigation("Breedstatus");

                    b.Navigation("Breedtype");

                    b.Navigation("Colors");

                    b.Navigation("Dogowner");

                    b.Navigation("Sex");
                });

            modelBuilder.Entity("DogsZurich.Shared.Dogowner", b =>
                {
                    b.HasOne("DogsZurich.Shared.Ageclass", "Ageclass")
                        .WithMany()
                        .HasForeignKey("AgeclassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DogsZurich.Shared.Kreis", "Kreis")
                        .WithMany()
                        .HasForeignKey("KreisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DogsZurich.Shared.Quartier", "Quartier")
                        .WithMany()
                        .HasForeignKey("QuartierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DogsZurich.Shared.Sex", "Sex")
                        .WithMany()
                        .HasForeignKey("SexId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ageclass");

                    b.Navigation("Kreis");

                    b.Navigation("Quartier");

                    b.Navigation("Sex");
                });
#pragma warning restore 612, 618
        }
    }
}
